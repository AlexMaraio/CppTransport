//
// Created by David Seery on 21/05/2014.
// Copyright (c) 2014 University of Sussex. All rights reserved.
//


#ifndef __time_data_line_H_
#define __time_data_line_H_

#include <vector>
#include <string>

#include "transport-runtime-api/messages.h"
#include "transport-runtime-api/exceptions.h"


namespace transport
  {

    namespace derived_data
      {


        //! A time_data_line is a data line suitable for use by a derived output.
        //! time_data_lines are generated by the different content generators, eg field_time_data etc.

        template <typename number>
        class time_data_line
          {

          public:

            time_data_line(const std::vector<double> a, const std::vector<number> d, const std::string& l)
              : axis(a), data(d), label(l)
              {
                if(axis.size() != data.size())
                  throw runtime_exception(runtime_exception::RUNTIME_ERROR, __CPP_TRANSPORT_PRODUCT_TDATALINE_AXIS_MISMATCH);
              }

            ~time_data_line() = default;


            // GET DATA

            //! Get number of sample points
            unsigned int size() const { return(this->data.size()); }

            //! Get label
            const std::string& get_label() const { return(this->label); }

            //! Get data
            const std::vector<number>& get_data_points() const { return(this->data); }

            //! Get axis
            const std::vector<double>& get_axis_points() const { return(this->axis); }


            // INTERNAL DATA

            //! axis labels
            const std::vector<double> axis;

            //! line data
            const std::vector<number> data;

            //! label
            const std::string label;

          };


      }   // namespace derived_data

  }   // namespace transport


#endif //__time_data_line_H_
